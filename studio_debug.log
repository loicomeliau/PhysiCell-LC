DEBUG:root:studio.py: config file is config/PhysiCell_settings.xml
DEBUG:root:studio.py: open_as_cb():  filePath is valid
DEBUG:root:len(config_file) = 29
DEBUG:root:done with args.config
DEBUG:root:self.current_dir = /home/loicom/Documents/Git/PhysiCell-LC
DEBUG:root:cell_def_tab.py: ------- fill_substrates_comboboxes
DEBUG:root: --> VEGF
DEBUG:root:=======================  microenv populate_tree  ======================= 
DEBUG:root:dc_ic_units =  mmHg
DEBUG:root:dc_bc_units = mmHg
DEBUG:root:bv = <Element 'boundary_value' at 0x7f608ade2520>
DEBUG:root:   -------- VEGF:  dirichlet_xmin = 0
DEBUG:root:bv = <Element 'boundary_value' at 0x7f608ade2570>
DEBUG:root:bv = <Element 'boundary_value' at 0x7f608ade25c0>
DEBUG:root:bv = <Element 'boundary_value' at 0x7f608ade2610>
DEBUG:root:bv = <Element 'boundary_value' at 0x7f608ade2660>
DEBUG:root:bv = <Element 'boundary_value' at 0x7f608ade26b0>
DEBUG:root:------- options: <Element 'calculate_gradients' at 0x7f608ade2750>
DEBUG:root:------- options: <Element 'track_internalized_substrates_in_each_agent' at 0x7f608ade27f0>
DEBUG:root:------- options: <Element 'initial_condition' at 0x7f608ade2840>
DEBUG:root:------- options: <Element 'dirichlet_nodes' at 0x7f608ade28e0>
DEBUG:root:

=======================  leaving microenv populate_tree  =====================
DEBUG:root:
====================== create_cycle_tab ===================
DEBUG:root: new stacked widget: trate live -------------> 0
DEBUG:root: new stacked widget: trate Ki67 -------------> 1
DEBUG:root: new stacked widget: t02 -------------> 2
DEBUG:root: new stacked widget: trate_flowcyto -------------> 3
DEBUG:root: new stacked widget: flow cyto sep -------------> 4
DEBUG:root: new stacked widget: trate_quiescent -------------> 5
DEBUG:root: new stacked widget: duration live -------------> 6
DEBUG:root: new stacked widget: duration Ki67 -------------> 7
DEBUG:root: new stacked widget: t02 -------------> 8
DEBUG:root: new stacked widget: duration_flowcyto -------------> 9
DEBUG:root: new stacked widget: flow cyto sep -------------> 10
DEBUG:root: new stacked widget: duration_quiescent -------------> 11
DEBUG:root:studio.py: first_cell_def_name= tip cell
DEBUG:root:cell_def_tab.py: ------- fill_substrates_comboboxes
DEBUG:root: --> VEGF
DEBUG:root:------ motility_substrate_changed_cb(): idx = 0
DEBUG:root:       motility_substrate_changed_cb(): self.current_cell_def = None
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 0
DEBUG:root:   text (subname) = VEGF
DEBUG:root:=======================  populate_tree_cell_defs(): ======================= 
DEBUG:root:    cell_def_tab.param_d = {}
DEBUG:root:

=======================  validate_cell_defs(): ======================= 
DEBUG:root:Checking tip cell
DEBUG:root:Checking stalk cell
DEBUG:root:=======================  end validate_cell_defs(): =======================


DEBUG:root:----- cell_def.tag= cell_definition
DEBUG:root:
--------new_interaction_params(): cdname_new= tip cell, reset_mapping= False
DEBUG:root:
--------new_intracellular_params(): cdname_new= tip cell
DEBUG:root:------- new_custom_data_params() -----
DEBUG:root:
===== populate_tree():  cycle
DEBUG:root: >> cycle_path= .//cell_definition[1]//phenotype//cycle
DEBUG:root:   cycle code= 5
DEBUG:root: >> phase_transition_path 
DEBUG:root: >> phase_durations_path =.//cell_definition[1]//phenotype//cycle//phase_durations
DEBUG:root: >> pd_uep =<Element 'phase_durations' at 0x7f608ade2ac0>
DEBUG:root:phase_duration= <Element 'duration' at 0x7f608ade2b60>
DEBUG:root:------------ sval for phase duration= 1388000.88889
DEBUG:root:------------ for live: sval for phase duration= 1388000.88889
DEBUG:root:
===== populate_tree():  death
DEBUG:root:death_uep=<Element 'death' at 0x7f608ade2bb0>
DEBUG:root:-------- parsing apoptosis!
DEBUG:root: >> pd_uep =<Element 'phase_durations' at 0x7f608ade2d40>
DEBUG:root:phase_duration= <Element 'duration' at 0x7f608ade2de0>
DEBUG:root:index= 0
DEBUG:root:-------- parsing necrosis!
DEBUG:root: >> pd_uep =<Element 'phase_durations' at 0x7f608ade3560>
DEBUG:root:<Element 'duration' at 0x7f608ade3600>
DEBUG:root:index= 0
DEBUG:root:<Element 'duration' at 0x7f608ade36a0>
DEBUG:root:index= 1
DEBUG:root:volume_path=.//cell_definition[1]//phenotype//volume//
DEBUG:root:
===== populate_tree():  mechanics
DEBUG:root:mechanics_path=.//cell_definition[1]//phenotype//mechanics//
DEBUG:root:---- cell_interactions_path= .//cell_definition[1]//phenotype//mechanics//cell_adhesion_affinities
DEBUG:root:---- found cell_adhesion_affinities_path:
DEBUG:root:--> {'tip cell': '1.0'}
DEBUG:root:--> {'tip cell': '1.0', 'stalk cell': '1.0'}
DEBUG:root:
===== populate_tree():  motility
DEBUG:root:motility_path=.//cell_definition[1]//phenotype//motility//
DEBUG:root:
----------- populate_tree_cell_defs.py: cell_def_name= tip cell,  cell_def_tab.param_d[cell_def_name]["motility_chemotaxis_substrate"] = VEGF
DEBUG:root:motility_advanced_chemotaxis_path= .//cell_definition[1]//phenotype//motility//options//advanced_chemotaxis//
DEBUG:root:chemotactic_sensitivity= {'VEGF': '0.0'}
DEBUG:root:sensitivity_path= .//cell_definition[1]//phenotype//motility//options//advanced_chemotaxis//chemotactic_sensitivities
DEBUG:root:---- found chemotactic_sensitivities: <Element 'chemotactic_sensitivities' at 0x7f608ae10fe0>
DEBUG:root:subelm=<Element 'chemotactic_sensitivity' at 0x7f608ae11080>
DEBUG:root: chemotactic_sensitivity--> VEGF = 0.0
DEBUG:root:{'VEGF': '0.0'}
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 0
DEBUG:root:   text (subname) = VEGF
DEBUG:root:    motility_advanced_chemotaxis_substrate= VEGF
DEBUG:root:   chemotactic_sensitivity = {'VEGF': '0.0'}
DEBUG:root:----- chemo_sensitivity_changed() = 0.0
DEBUG:root:----- chemo_sensitivity_changed(): subname = VEGF
DEBUG:root:     chemotactic_sensitivity (dict)= {'VEGF': '0.0'}
DEBUG:root:
===== populate_tree():  secretion
DEBUG:root:secretion_path = .//cell_definition[1]//phenotype//secretion//
DEBUG:root:uep_secretion = <Element 'secretion' at 0x7f608ae11170>
DEBUG:root:0) -- secretion substrate = VEGF
DEBUG:root:------ done parsing secretion:
DEBUG:root:
===== populate_tree():  cell_interactions
DEBUG:root:---- cell_interactions_path= .//cell_definition[1]//phenotype//cell_interactions
DEBUG:root:---- found cell_interactions:
DEBUG:root:uep2= <Element 'live_phagocytosis_rates' at 0x7f608ae11530>
DEBUG:root: live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0'}
DEBUG:root: attack_rate= {'tip cell': '0', 'stalk cell': '0.0'}
DEBUG:root: fusion_rate= {'tip cell': '0', 'stalk cell': '0.0'}
DEBUG:root:------ done parsing cell_interactions:
DEBUG:root:---- transformation_rates_path = .//cell_definition[1]//phenotype//cell_transformations//transformation_rates
DEBUG:root: transformation_rate= {'tip cell': '0', 'stalk cell': '0.0'}
DEBUG:root:------ done parsing cell_transformations:
DEBUG:root:
===== populate_tree():  molecular
DEBUG:root:
===== populate_tree():  intracellular
DEBUG:root:------ done parsing intracellular:
DEBUG:root:
===== populate_tree():  custom data
DEBUG:root:uep_custom_data= <Element 'custom_data' at 0x7f608ae11c10>
DEBUG:root:--------------- populate_tree: (empty)custom_data = {}
DEBUG:root:var.attrib.keys() = dict_keys(['conserved', 'units', 'description'])
DEBUG:root:populate: cell_def_name= tip cell --> custom_data: {'maximum_number_of_attachments': ['1.0', False]}
DEBUG:root:----- cell_def.tag= cell_definition
DEBUG:root:
--------new_interaction_params(): cdname_new= stalk cell, reset_mapping= False
DEBUG:root:
--------new_intracellular_params(): cdname_new= stalk cell
DEBUG:root:------- new_custom_data_params() -----
DEBUG:root:
===== populate_tree():  cycle
DEBUG:root: >> cycle_path= .//cell_definition[2]//phenotype//cycle
DEBUG:root:   cycle code= 5
DEBUG:root: >> phase_transition_path 
DEBUG:root: >> phase_durations_path =.//cell_definition[2]//phenotype//cycle//phase_durations
DEBUG:root: >> pd_uep =<Element 'phase_durations' at 0x7f608ae11df0>
DEBUG:root:phase_duration= <Element 'duration' at 0x7f608ae11e90>
DEBUG:root:------------ sval for phase duration= 4500
DEBUG:root:------------ for live: sval for phase duration= 4500
DEBUG:root:
===== populate_tree():  death
DEBUG:root:death_uep=<Element 'death' at 0x7f608ae11ee0>
DEBUG:root:-------- parsing apoptosis!
DEBUG:root: >> tr_uep =<Element 'phase_transition_rates' at 0x7f608ae12070>
DEBUG:root:death: phase_transition_rates= <Element 'rate' at 0x7f608ae12110>
DEBUG:root:start_index= 0
DEBUG:root:-------- parsing necrosis!
DEBUG:root: >> tr_uep =<Element 'phase_transition_rates' at 0x7f608ae127a0>
DEBUG:root:death: phase_transition_rates= <Element 'rate' at 0x7f608ae12840>
DEBUG:root:start_index= 0
DEBUG:root: --- transition rate 01 (float) = 9000000000.0
DEBUG:root:death: phase_transition_rates= <Element 'rate' at 0x7f608ae128e0>
DEBUG:root:start_index= 1
DEBUG:root: --- transition rate 12 (float) = 1.15741e-05
DEBUG:root:volume_path=.//cell_definition[2]//phenotype//volume//
DEBUG:root:
===== populate_tree():  mechanics
DEBUG:root:mechanics_path=.//cell_definition[2]//phenotype//mechanics//
DEBUG:root:---- cell_interactions_path= .//cell_definition[2]//phenotype//mechanics//cell_adhesion_affinities
DEBUG:root:---- found cell_adhesion_affinities_path:
DEBUG:root:--> {'tip cell': '1.0'}
DEBUG:root:--> {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:
===== populate_tree():  motility
DEBUG:root:motility_path=.//cell_definition[2]//phenotype//motility//
DEBUG:root:
----------- populate_tree_cell_defs.py: cell_def_name= stalk cell,  cell_def_tab.param_d[cell_def_name]["motility_chemotaxis_substrate"] = VEGF
DEBUG:root:motility_advanced_chemotaxis_path= .//cell_definition[2]//phenotype//motility//options//advanced_chemotaxis//
DEBUG:root:chemotactic_sensitivity= {'VEGF': '0.0'}
DEBUG:root:sensitivity_path= .//cell_definition[2]//phenotype//motility//options//advanced_chemotaxis//chemotactic_sensitivities
DEBUG:root:---- found chemotactic_sensitivities: <Element 'chemotactic_sensitivities' at 0x7f608ae13e70>
DEBUG:root:subelm=<Element 'chemotactic_sensitivity' at 0x7f608ae13f10>
DEBUG:root: chemotactic_sensitivity--> VEGF = 0.0
DEBUG:root:{'VEGF': '0.0'}
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 0
DEBUG:root:   text (subname) = VEGF
DEBUG:root:    motility_advanced_chemotaxis_substrate= VEGF
DEBUG:root:   chemotactic_sensitivity = {'VEGF': '0.0'}
DEBUG:root:
===== populate_tree():  secretion
DEBUG:root:secretion_path = .//cell_definition[2]//phenotype//secretion//
DEBUG:root:uep_secretion = <Element 'secretion' at 0x7f608ae20040>
DEBUG:root:0) -- secretion substrate = VEGF
DEBUG:root:------ done parsing secretion:
DEBUG:root:
===== populate_tree():  cell_interactions
DEBUG:root:---- cell_interactions_path= .//cell_definition[2]//phenotype//cell_interactions
DEBUG:root:---- found cell_interactions:
DEBUG:root:uep2= <Element 'live_phagocytosis_rates' at 0x7f608ae20400>
DEBUG:root: live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root: attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root: fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:------ done parsing cell_interactions:
DEBUG:root:---- transformation_rates_path = .//cell_definition[2]//phenotype//cell_transformations//transformation_rates
DEBUG:root: transformation_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:------ done parsing cell_transformations:
DEBUG:root:
===== populate_tree():  molecular
DEBUG:root:
===== populate_tree():  intracellular
DEBUG:root:------ done parsing intracellular:
DEBUG:root:
===== populate_tree():  custom data
DEBUG:root:uep_custom_data= <Element 'custom_data' at 0x7f608ae20ae0>
DEBUG:root:--------------- populate_tree: (empty)custom_data = {}
DEBUG:root:var.attrib.keys() = dict_keys(['conserved', 'units', 'description'])
DEBUG:root:populate: cell_def_name= stalk cell --> custom_data: {'maximum_number_of_attachments': ['2', False]}
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> duration
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>duration
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:
----- update_motility_params():  cdname= tip cell
DEBUG:root:   (simple) chemotaxis motility is enabled:
DEBUG:root:     setting motility_substrate_dropdown (for cdname= tip cell ) = VEGF
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= tip cell ) = VEGF
DEBUG:root:    chemotactic_sensitivity= {'VEGF': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = tip cell
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = VEGF
DEBUG:root:{'VEGF': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:cell_def_tab.py: ------- fill_celltypes_comboboxes
DEBUG:root:

------------  user_params_tab: fill_gui --------------
DEBUG:root:studio.py: self.current_dir = /home/loicom/Documents/Git/PhysiCell-LC
DEBUG:root:studio.py: creating ICs, Run, and Plot tabs
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/Ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman10-italic.otf', name='Latin Modern Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonolt10-boldoblique.otf', name='Latin Modern Mono Light', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsans10-boldoblique.otf', name='Latin Modern Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmromanslant8-regular.otf', name='Latin Modern Roman Slanted', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/Muktibold.ttf', name='Mukti', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmromandunh10-oblique.otf', name='Latin Modern Roman Dunhill', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsans10-oblique.otf', name='Latin Modern Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Italic.ttf', name='Yrsa', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/suranna.ttf', name='Suranna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmromanslant10-bold.otf', name='Latin Modern Roman Slanted', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/dhurjati.ttf', name='Dhurjati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Gidugu.ttf', name='Gidugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman10-bold.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonolt10-oblique.otf', name='Latin Modern Mono Light', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman9-italic.otf', name='Latin Modern Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmono8-regular.otf', name='Latin Modern Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonoslant10-regular.otf', name='Latin Modern Mono Slanted', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsans10-regular.otf', name='Latin Modern Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBoldItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmono9-regular.otf', name='Latin Modern Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonoltcond10-oblique.otf', name='Latin Modern Mono Light Cond', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonocaps10-oblique.otf', name='Latin Modern Mono Caps', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsans8-regular.otf', name='Latin Modern Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsansquot8-bold.otf', name='Latin Modern Sans Quotation', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonoproplt10-boldoblique.otf', name='Latin Modern Mono Prop Light', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman6-bold.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman12-bold.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/SreeKrushnadevaraya.ttf', name='Sree Krushnadevaraya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MitraMono.ttf', name='Mitra ', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmromanslant10-regular.otf', name='Latin Modern Roman Slanted', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonoproplt10-oblique.otf', name='Latin Modern Mono Prop Light', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-MediumItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonolt10-regular.otf', name='Latin Modern Mono Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmono12-regular.otf', name='Latin Modern Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman10-regular.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman9-regular.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/ramabhadra.ttf', name='Ramabhadra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman7-bold.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman7-regular.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonoprop10-regular.otf', name='Latin Modern Mono Prop', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonoproplt10-bold.otf', name='Latin Modern Mono Prop Light', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Ponnala.ttf', name='Ponnala', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsans12-regular.otf', name='Latin Modern Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmono10-regular.otf', name='Latin Modern Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonocaps10-regular.otf', name='Latin Modern Mono Caps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsans17-oblique.otf', name='Latin Modern Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/LakkiReddy.ttf', name='LakkiReddy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/TimmanaRegular.ttf', name='Timmana', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmromandunh10-regular.otf', name='Latin Modern Roman Dunhill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-LightItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmromandemi10-regular.otf', name='Latin Modern Roman Demi', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman6-regular.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/NATS.ttf', name='NATS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmromanunsl10-regular.otf', name='Latin Modern Roman Unslanted', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmromancaps10-regular.otf', name='Latin Modern Roman Caps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/PottiSreeramulu.ttf', name='Potti Sreeramulu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/NTR.ttf', name='NTR', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman8-regular.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/libreoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsans9-regular.otf', name='Latin Modern Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsansquot8-oblique.otf', name='Latin Modern Sans Quotation', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmromandemi10-oblique.otf', name='Latin Modern Roman Demi', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsans8-oblique.otf', name='Latin Modern Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/SyamalaRamana.ttf', name='Syamala Ramana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman12-regular.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsansquot8-boldoblique.otf', name='Latin Modern Sans Quotation', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsans17-regular.otf', name='Latin Modern Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/Mukti.ttf', name='Mukti', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsansdemicond10-regular.otf', name='Latin Modern Sans Demi Cond', style='normal', variant='normal', weight=600, stretch='condensed', size='scalable')) = 10.44
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsansdemicond10-oblique.otf', name='Latin Modern Sans Demi Cond', style='oblique', variant='normal', weight=600, stretch='condensed', size='scalable')) = 11.44
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm-math/latinmodern-math.otf', name='Latin Modern Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmono10-italic.otf', name='Latin Modern Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/mallanna.ttf', name='Mallanna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsans12-oblique.otf', name='Latin Modern Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman10-bolditalic.otf', name='Latin Modern Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman9-bold.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonoltcond10-regular.otf', name='Latin Modern Mono Light Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsans10-bold.otf', name='Latin Modern Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmromanslant9-regular.otf', name='Latin Modern Roman Slanted', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonoproplt10-regular.otf', name='Latin Modern Mono Prop Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman12-italic.otf', name='Latin Modern Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsansquot8-regular.otf', name='Latin Modern Sans Quotation', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsans9-oblique.otf', name='Latin Modern Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Peddana-Regular.ttf', name='Peddana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman7-italic.otf', name='Latin Modern Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Ramaraja-Regular.ttf', name='Ramaraja', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman17-regular.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/RaviPrakash.ttf', name='RaviPrakash', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmromancaps10-oblique.otf', name='Latin Modern Roman Caps', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Bold.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman5-regular.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-BoldItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmromanslant12-regular.otf', name='Latin Modern Roman Slanted', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonoprop10-oblique.otf', name='Latin Modern Mono Prop', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman8-italic.otf', name='Latin Modern Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman5-bold.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Gurajada.ttf', name='Gurajada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/TenaliRamakrishna-Regular.ttf', name='TenaliRamakrishna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Suravaram.ttf', name='Suravaram', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmromanslant17-regular.otf', name='Latin Modern Roman Slanted', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Mandali-Regular.ttf', name='Mandali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman8-bold.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonolt10-bold.otf', name='Latin Modern Mono Light', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Regular.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:root:ics_tab.py: fill_celltype_combobox(): ['tip cell', 'stalk cell']
DEBUG:root:ics_tab.py: fill_celltype_combobox(): ['tip cell', 'stalk cell']
DEBUG:root:studio.py: calling vis_tab.substrates_cbox_changed_cb(2)
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=7.0.
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/Ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman10-italic.otf', name='Latin Modern Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonolt10-boldoblique.otf', name='Latin Modern Mono Light', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsans10-boldoblique.otf', name='Latin Modern Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmromanslant8-regular.otf', name='Latin Modern Roman Slanted', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/Muktibold.ttf', name='Mukti', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmromandunh10-oblique.otf', name='Latin Modern Roman Dunhill', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsans10-oblique.otf', name='Latin Modern Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Italic.ttf', name='Yrsa', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/suranna.ttf', name='Suranna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmromanslant10-bold.otf', name='Latin Modern Roman Slanted', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/dhurjati.ttf', name='Dhurjati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Gidugu.ttf', name='Gidugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman10-bold.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonolt10-oblique.otf', name='Latin Modern Mono Light', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman9-italic.otf', name='Latin Modern Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmono8-regular.otf', name='Latin Modern Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonoslant10-regular.otf', name='Latin Modern Mono Slanted', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsans10-regular.otf', name='Latin Modern Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBoldItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmono9-regular.otf', name='Latin Modern Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonoltcond10-oblique.otf', name='Latin Modern Mono Light Cond', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonocaps10-oblique.otf', name='Latin Modern Mono Caps', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsans8-regular.otf', name='Latin Modern Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsansquot8-bold.otf', name='Latin Modern Sans Quotation', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonoproplt10-boldoblique.otf', name='Latin Modern Mono Prop Light', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman6-bold.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman12-bold.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/SreeKrushnadevaraya.ttf', name='Sree Krushnadevaraya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MitraMono.ttf', name='Mitra ', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmromanslant10-regular.otf', name='Latin Modern Roman Slanted', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonoproplt10-oblique.otf', name='Latin Modern Mono Prop Light', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-MediumItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonolt10-regular.otf', name='Latin Modern Mono Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmono12-regular.otf', name='Latin Modern Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman10-regular.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman9-regular.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/ramabhadra.ttf', name='Ramabhadra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman7-bold.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman7-regular.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonoprop10-regular.otf', name='Latin Modern Mono Prop', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonoproplt10-bold.otf', name='Latin Modern Mono Prop Light', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Ponnala.ttf', name='Ponnala', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsans12-regular.otf', name='Latin Modern Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmono10-regular.otf', name='Latin Modern Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonocaps10-regular.otf', name='Latin Modern Mono Caps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsans17-oblique.otf', name='Latin Modern Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/LakkiReddy.ttf', name='LakkiReddy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/TimmanaRegular.ttf', name='Timmana', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmromandunh10-regular.otf', name='Latin Modern Roman Dunhill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-LightItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmromandemi10-regular.otf', name='Latin Modern Roman Demi', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman6-regular.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/NATS.ttf', name='NATS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmromanunsl10-regular.otf', name='Latin Modern Roman Unslanted', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmromancaps10-regular.otf', name='Latin Modern Roman Caps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/PottiSreeramulu.ttf', name='Potti Sreeramulu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/NTR.ttf', name='NTR', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman8-regular.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/libreoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsans9-regular.otf', name='Latin Modern Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsansquot8-oblique.otf', name='Latin Modern Sans Quotation', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmromandemi10-oblique.otf', name='Latin Modern Roman Demi', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsans8-oblique.otf', name='Latin Modern Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/SyamalaRamana.ttf', name='Syamala Ramana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman12-regular.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsansquot8-boldoblique.otf', name='Latin Modern Sans Quotation', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsans17-regular.otf', name='Latin Modern Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/Mukti.ttf', name='Mukti', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsansdemicond10-regular.otf', name='Latin Modern Sans Demi Cond', style='normal', variant='normal', weight=600, stretch='condensed', size='scalable')) = 10.44
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsansdemicond10-oblique.otf', name='Latin Modern Sans Demi Cond', style='oblique', variant='normal', weight=600, stretch='condensed', size='scalable')) = 11.44
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm-math/latinmodern-math.otf', name='Latin Modern Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmono10-italic.otf', name='Latin Modern Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/mallanna.ttf', name='Mallanna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsans12-oblique.otf', name='Latin Modern Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman10-bolditalic.otf', name='Latin Modern Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman9-bold.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonoltcond10-regular.otf', name='Latin Modern Mono Light Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsans10-bold.otf', name='Latin Modern Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmromanslant9-regular.otf', name='Latin Modern Roman Slanted', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonoproplt10-regular.otf', name='Latin Modern Mono Prop Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman12-italic.otf', name='Latin Modern Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsansquot8-regular.otf', name='Latin Modern Sans Quotation', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmsans9-oblique.otf', name='Latin Modern Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Peddana-Regular.ttf', name='Peddana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman7-italic.otf', name='Latin Modern Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Ramaraja-Regular.ttf', name='Ramaraja', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman17-regular.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/RaviPrakash.ttf', name='RaviPrakash', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmromancaps10-oblique.otf', name='Latin Modern Roman Caps', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Bold.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman5-regular.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-BoldItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmromanslant12-regular.otf', name='Latin Modern Roman Slanted', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonoprop10-oblique.otf', name='Latin Modern Mono Prop', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman8-italic.otf', name='Latin Modern Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman5-bold.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Gurajada.ttf', name='Gurajada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/TenaliRamakrishna-Regular.ttf', name='TenaliRamakrishna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Suravaram.ttf', name='Suravaram', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmromanslant17-regular.otf', name='Latin Modern Roman Slanted', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Mandali-Regular.ttf', name='Mandali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmroman8-bold.otf', name='Latin Modern Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/texmf/fonts/opentype/public/lm/lmmonolt10-bold.otf', name='Latin Modern Mono Light', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Regular.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=7.0 to DejaVu Sans ('/home/loicom/miniconda3/envs/physicell-env/lib/python3.12/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> transition rate     
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>transition rate     
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:key 0= tip cell
DEBUG:root:keys 1= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:keys 2= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:
----- update_motility_params():  cdname= stalk cell
DEBUG:root:     setting motility_substrate_dropdown (for cdname= stalk cell ) = VEGF
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= stalk cell ) = VEGF
DEBUG:root:    chemotactic_sensitivity= {'VEGF': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = stalk cell
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = VEGF
DEBUG:root:{'VEGF': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> duration
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>duration
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:key 0= tip cell
DEBUG:root:keys 1= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:keys 2= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:
----- update_motility_params():  cdname= tip cell
DEBUG:root:   (simple) chemotaxis motility is enabled:
DEBUG:root:     setting motility_substrate_dropdown (for cdname= tip cell ) = VEGF
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= tip cell ) = VEGF
DEBUG:root:    chemotactic_sensitivity= {'VEGF': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = tip cell
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = VEGF
DEBUG:root:{'VEGF': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> transition rate     
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>transition rate     
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:key 0= tip cell
DEBUG:root:keys 1= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:keys 2= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:
----- update_motility_params():  cdname= stalk cell
DEBUG:root:     setting motility_substrate_dropdown (for cdname= stalk cell ) = VEGF
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= stalk cell ) = VEGF
DEBUG:root:    chemotactic_sensitivity= {'VEGF': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = stalk cell
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = VEGF
DEBUG:root:{'VEGF': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> duration
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>duration
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:key 0= tip cell
DEBUG:root:keys 1= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:keys 2= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:
----- update_motility_params():  cdname= tip cell
DEBUG:root:   (simple) chemotaxis motility is enabled:
DEBUG:root:     setting motility_substrate_dropdown (for cdname= tip cell ) = VEGF
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= tip cell ) = VEGF
DEBUG:root:    chemotactic_sensitivity= {'VEGF': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = tip cell
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = VEGF
DEBUG:root:{'VEGF': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> transition rate     
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>transition rate     
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:key 0= tip cell
DEBUG:root:keys 1= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:keys 2= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:
----- update_motility_params():  cdname= stalk cell
DEBUG:root:     setting motility_substrate_dropdown (for cdname= stalk cell ) = VEGF
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= stalk cell ) = VEGF
DEBUG:root:    chemotactic_sensitivity= {'VEGF': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = stalk cell
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = VEGF
DEBUG:root:{'VEGF': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> duration
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>duration
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:key 0= tip cell
DEBUG:root:keys 1= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:keys 2= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:
----- update_motility_params():  cdname= tip cell
DEBUG:root:   (simple) chemotaxis motility is enabled:
DEBUG:root:     setting motility_substrate_dropdown (for cdname= tip cell ) = VEGF
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= tip cell ) = VEGF
DEBUG:root:    chemotactic_sensitivity= {'VEGF': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = tip cell
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = VEGF
DEBUG:root:{'VEGF': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> transition rate     
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>transition rate     
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:key 0= tip cell
DEBUG:root:keys 1= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:keys 2= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:
----- update_motility_params():  cdname= stalk cell
DEBUG:root:     setting motility_substrate_dropdown (for cdname= stalk cell ) = VEGF
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= stalk cell ) = VEGF
DEBUG:root:    chemotactic_sensitivity= {'VEGF': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = stalk cell
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = VEGF
DEBUG:root:{'VEGF': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> duration
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>duration
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:key 0= tip cell
DEBUG:root:keys 1= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:keys 2= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:
----- update_motility_params():  cdname= tip cell
DEBUG:root:   (simple) chemotaxis motility is enabled:
DEBUG:root:     setting motility_substrate_dropdown (for cdname= tip cell ) = VEGF
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= tip cell ) = VEGF
DEBUG:root:    chemotactic_sensitivity= {'VEGF': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = tip cell
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = VEGF
DEBUG:root:{'VEGF': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:key 0= tip cell
DEBUG:root:keys 1= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:keys 2= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:
----- update_motility_params():  cdname= tip cell
DEBUG:root:   (simple) chemotaxis motility is enabled:
DEBUG:root:     setting motility_substrate_dropdown (for cdname= tip cell ) = VEGF
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= tip cell ) = VEGF
DEBUG:root:    chemotactic_sensitivity= {'VEGF': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = tip cell
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = VEGF
DEBUG:root:{'VEGF': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> transition rate     
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>transition rate     
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:key 0= tip cell
DEBUG:root:keys 1= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:keys 2= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:
----- update_motility_params():  cdname= stalk cell
DEBUG:root:     setting motility_substrate_dropdown (for cdname= stalk cell ) = VEGF
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= stalk cell ) = VEGF
DEBUG:root:    chemotactic_sensitivity= {'VEGF': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = stalk cell
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = VEGF
DEBUG:root:{'VEGF': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> duration
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>duration
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:key 0= tip cell
DEBUG:root:keys 1= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:keys 2= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:
----- update_motility_params():  cdname= tip cell
DEBUG:root:   (simple) chemotaxis motility is enabled:
DEBUG:root:     setting motility_substrate_dropdown (for cdname= tip cell ) = VEGF
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= tip cell ) = VEGF
DEBUG:root:    chemotactic_sensitivity= {'VEGF': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = tip cell
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = VEGF
DEBUG:root:{'VEGF': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> transition rate     
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>transition rate     
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:key 0= tip cell
DEBUG:root:keys 1= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:keys 2= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:
----- update_motility_params():  cdname= stalk cell
DEBUG:root:     setting motility_substrate_dropdown (for cdname= stalk cell ) = VEGF
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= stalk cell ) = VEGF
DEBUG:root:    chemotactic_sensitivity= {'VEGF': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = stalk cell
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = VEGF
DEBUG:root:{'VEGF': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> duration
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>duration
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:key 0= tip cell
DEBUG:root:keys 1= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:keys 2= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:
----- update_motility_params():  cdname= tip cell
DEBUG:root:   (simple) chemotaxis motility is enabled:
DEBUG:root:     setting motility_substrate_dropdown (for cdname= tip cell ) = VEGF
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= tip cell ) = VEGF
DEBUG:root:    chemotactic_sensitivity= {'VEGF': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = tip cell
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = VEGF
DEBUG:root:{'VEGF': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> transition rate     
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>transition rate     
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:key 0= tip cell
DEBUG:root:keys 1= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:keys 2= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:
----- update_motility_params():  cdname= stalk cell
DEBUG:root:     setting motility_substrate_dropdown (for cdname= stalk cell ) = VEGF
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= stalk cell ) = VEGF
DEBUG:root:    chemotactic_sensitivity= {'VEGF': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = stalk cell
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = VEGF
DEBUG:root:{'VEGF': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> duration
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>duration
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:key 0= tip cell
DEBUG:root:keys 1= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:keys 2= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:
----- update_motility_params():  cdname= tip cell
DEBUG:root:   (simple) chemotaxis motility is enabled:
DEBUG:root:     setting motility_substrate_dropdown (for cdname= tip cell ) = VEGF
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= tip cell ) = VEGF
DEBUG:root:    chemotactic_sensitivity= {'VEGF': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = tip cell
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = VEGF
DEBUG:root:{'VEGF': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> transition rate     
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>transition rate     
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:key 0= tip cell
DEBUG:root:keys 1= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:keys 2= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:
----- update_motility_params():  cdname= stalk cell
DEBUG:root:     setting motility_substrate_dropdown (for cdname= stalk cell ) = VEGF
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= stalk cell ) = VEGF
DEBUG:root:    chemotactic_sensitivity= {'VEGF': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = stalk cell
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = VEGF
DEBUG:root:{'VEGF': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> duration
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>duration
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:key 0= tip cell
DEBUG:root:keys 1= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:keys 2= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:
----- update_motility_params():  cdname= tip cell
DEBUG:root:   (simple) chemotaxis motility is enabled:
DEBUG:root:     setting motility_substrate_dropdown (for cdname= tip cell ) = VEGF
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= tip cell ) = VEGF
DEBUG:root:    chemotactic_sensitivity= {'VEGF': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = tip cell
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = VEGF
DEBUG:root:{'VEGF': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> transition rate     
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>transition rate     
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:key 0= tip cell
DEBUG:root:keys 1= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:keys 2= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:
----- update_motility_params():  cdname= stalk cell
DEBUG:root:     setting motility_substrate_dropdown (for cdname= stalk cell ) = VEGF
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= stalk cell ) = VEGF
DEBUG:root:    chemotactic_sensitivity= {'VEGF': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = stalk cell
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = VEGF
DEBUG:root:{'VEGF': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> duration
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>duration
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:key 0= tip cell
DEBUG:root:keys 1= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:keys 2= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:
----- update_motility_params():  cdname= tip cell
DEBUG:root:   (simple) chemotaxis motility is enabled:
DEBUG:root:     setting motility_substrate_dropdown (for cdname= tip cell ) = VEGF
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= tip cell ) = VEGF
DEBUG:root:    chemotactic_sensitivity= {'VEGF': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = tip cell
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = VEGF
DEBUG:root:{'VEGF': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> transition rate     
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>transition rate     
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:key 0= tip cell
DEBUG:root:keys 1= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:keys 2= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:
----- update_motility_params():  cdname= stalk cell
DEBUG:root:     setting motility_substrate_dropdown (for cdname= stalk cell ) = VEGF
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= stalk cell ) = VEGF
DEBUG:root:    chemotactic_sensitivity= {'VEGF': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = stalk cell
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = VEGF
DEBUG:root:{'VEGF': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a7710>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f6078eb40b0> <matplotlib.colors.Normalize object at 0x7f6078eb40b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea1ee0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f6078eb40b0> <matplotlib.colors.Normalize object at 0x7f6078eb40b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea1ee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea2d80>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f6078deaff0> <matplotlib.colors.Normalize object at 0x7f6078deaff0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078dfcda0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f6078deaff0> <matplotlib.colors.Normalize object at 0x7f6078deaff0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078dfcda0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078eb5970>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f6078ddaa20> <matplotlib.colors.Normalize object at 0x7f6078ddaa20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a50d0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f6078ddaa20> <matplotlib.colors.Normalize object at 0x7f6078ddaa20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a50d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ddb050>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c96930>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f6078901640> <matplotlib.colors.Normalize object at 0x7f6078901640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb22a0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f6078901640> <matplotlib.colors.Normalize object at 0x7f6078901640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb22a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb3fe0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f60789011c0> <matplotlib.colors.Normalize object at 0x7f60789011c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a7470>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f60789011c0> <matplotlib.colors.Normalize object at 0x7f60789011c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a7470>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f608ae7a960>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227bd760>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227bf950>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279e1b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d4b590>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d13140>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bda30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bf7d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231bb800>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123149430>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279c440>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612315bcb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea2930>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e8a5d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf2030>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078924da0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277ec90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d5cdd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b3140>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277e1e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b1670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d5f40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607894baa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078925250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f7cb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb3b30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078eb6ae0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123202030>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078dd8cb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612262e7b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ddb380>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227bd040>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123203200>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b5cd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d481a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d48ec0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f79b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122817050>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607886b9b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788acb60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c94050>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277fd10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a5e20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612284c200>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277faa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122868cb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612287a780>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f7e00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f77d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f5b80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122658e90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612273dc10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607cfc2ff0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e8af90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612284f350>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61228680b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078dfc740>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078dfd190>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf3da0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607894b530>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078948d40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078948a40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b0500>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d12630>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d10650>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078868b60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612273cec0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612273f110>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078872510>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612284d820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b6780>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a4f20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122814ec0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078890bf0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279ce90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123149100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf0b30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c94200>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e8a030>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788df920>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b79b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122658b30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb0f50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d11e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf0050>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227bf4a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231b9a30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078891a30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078dfeb40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123149b20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b63c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c972c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612284f770>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123200c50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607894acc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612273c440>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612284c800>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d10470>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122608260>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122608fe0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123203320>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612262d100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a5550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612270b710>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788ae210>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122868e60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a4230>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231589e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612287a870>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f49b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277fe00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f63f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e13d70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123202ed0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122756e10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e6dd30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788918b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612270adb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231488c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078eb5460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf04d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078de8560>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607894a900>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122709070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f7dd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e52660>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e52f90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea0e30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122757f80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bd970>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227bd910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078872f00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122869b20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122869490>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227548f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122754b30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122609610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6099114560>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ec1f10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d12ea0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb2c00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612287af60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277d6a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bcfb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f4ef0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279dc40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c96690>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279f290>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788ab6b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e8a270>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e897c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122754410>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e8a540>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60789036e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788737d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227bc7d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612262caa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226086e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b0470>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612287b8c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231ba4e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612287a5d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b4b30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123202000>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d58b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607889cf50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e6c680>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bea20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607889ef60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612286a060>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612314a690>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e50e30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f7f50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078925430>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078dfdb50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea1ee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e6d790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a4a40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f5970>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122756210>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612273dd60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227bdcd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d5d00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227bd9a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612262fe30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d48920>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b4c50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a6ed0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf3710>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607894b260>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61232014c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227bcad0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612262ec60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e52cf0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788acfe0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c971a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf33e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c96c60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788af500>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb31a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123202ed0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078eb4e90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b2000>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122609a90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d5f350>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d5ee10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788932f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d6750>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612286b950>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f5940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612270ad80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e12810>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231bbcb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b7dd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e12960>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612270b590>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607889ec90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788aecf0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078891250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f608ae241d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e6ec90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277fa10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612273dc10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bf290>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612287a420>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612315ac30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf03b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078868710>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb1fd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227beb10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb03b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d7350>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607889ee40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122879160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e53cb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e50800>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612284e690>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d129c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122860d10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227bf7d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ddadb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122757fe0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d4b6e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123202090>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607886ae70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123203890>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612286ad80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c97110>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607889ffb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788708c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226584a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f608ae0bdd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123200350>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122879b50>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f6078e50200> <matplotlib.colors.Normalize object at 0x7f6078e50200>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078dfce90>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f6078e50200> <matplotlib.colors.Normalize object at 0x7f6078e50200>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078dfce90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122709c70>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea2ab0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788add60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788933e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b2e10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612287b650>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122869a30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231b8590>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612286ad80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d5d190>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231b9f40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231b81d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123200bc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122659700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078de8ce0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123201370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a8a70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788aebd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607889e060>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60789264b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078926b40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c97f20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612284e090>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612284e150>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f6078871eb0> <matplotlib.colors.Normalize object at 0x7f6078871eb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f70e0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f6078871eb0> <matplotlib.colors.Normalize object at 0x7f6078871eb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f70e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61232026c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279fe90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122608590>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612287ae40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123159e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078891670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b7470>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227086e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231bb2c0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f6123158200> <matplotlib.colors.Normalize object at 0x7f6123158200>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231b9c40>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f6123158200> <matplotlib.colors.Normalize object at 0x7f6123158200>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231b9c40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b6ab0>
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f61224b4170> <matplotlib.colors.Normalize object at 0x7f61224b4170>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a7500>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f61224b4170> <matplotlib.colors.Normalize object at 0x7f61224b4170>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a7500>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078925e80>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f60788dd130> <matplotlib.colors.Normalize object at 0x7f60788dd130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078eb4bf0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f60788dd130> <matplotlib.colors.Normalize object at 0x7f60788dd130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078eb4bf0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078eb7cb0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f6078e51550> <matplotlib.colors.Normalize object at 0x7f6078e51550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122814440>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f6078e51550> <matplotlib.colors.Normalize object at 0x7f6078e51550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122814440>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122816cf0>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f61224b72f0> <matplotlib.colors.Normalize object at 0x7f61224b72f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f60c0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f61224b72f0> <matplotlib.colors.Normalize object at 0x7f61224b72f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f60c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f7e00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078901b50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078901c40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60789016d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d49fd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d4a900>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277e450>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612265a9c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d483e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e52180>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f6150>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea0710>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea2f90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788dd070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612262f170>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612262f7d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfdac0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf23c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231ba540>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfca10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607894b3b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d5550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612314b740>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61228693d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612286a480>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612284f8f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123203770>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f4e60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d12990>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f79b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612315b560>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612314b7d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d5e810>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a8b90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e8ba40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61232031d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d11940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b07d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279d910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231485c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e6d580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279f4a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123201f70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788af4a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279e960>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a71a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b4fb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d5d60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e13cb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d6690>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607886bef0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612265be60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612265aed0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607886a8a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60789001a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227bdbb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d12b10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224ead80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231ba5d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122756240>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612314a210>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d5c680>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f608adfe510>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607889f440>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ddac90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea0f80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277c1d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078924680>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277fa10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612253f800>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf3290>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122814260>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf1250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788731d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d45c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612253fcb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612284c5c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612284e990>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612253e720>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb2ba0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607cfc3200>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bc230>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231b99d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122817c20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb33b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224e8b60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f4620>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f4d70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122815700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788ac2f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612270a000>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078868d70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a6480>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227083e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612315b410>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078903380>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078eb6db0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612265a2a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d118b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227bf7d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d6990>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bd0a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c97e60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d5d0d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277f980>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bc800>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b03e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d5c980>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c96600>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788aa8a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122816690>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c97fb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f6810>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfc110>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122878d70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224ea960>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612253f7a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788dcc50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788df530>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f608ae097f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61232038f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122815af0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bcb60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612286b7a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607889d3a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c978f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612287bd70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231486e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d5eed0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123149730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612253d6d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277ea20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a96a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612284f230>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea3560>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612314aa80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f4590>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122709d90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb16d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb0140>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122509790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612273f770>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f44a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612253ff50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612253e5d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bd0a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d12ab0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123202150>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf2e40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078dfce90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d5c680>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e10110>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e52d50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d5610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d7e90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612314b2c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607886a180>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612253d940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f6a20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078eb5a60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612253cdd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b33b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122868320>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607889f0b0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f612286bf80> <matplotlib.colors.Normalize object at 0x7f612286bf80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b5220>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f612286bf80> <matplotlib.colors.Normalize object at 0x7f612286bf80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b5220>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60789496a0>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f60788a9580> <matplotlib.colors.Normalize object at 0x7f60788a9580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfc8c0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f60788a9580> <matplotlib.colors.Normalize object at 0x7f60788a9580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfc8c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788aaf90>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f6078925130> <matplotlib.colors.Normalize object at 0x7f6078925130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d4aa0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f6078925130> <matplotlib.colors.Normalize object at 0x7f6078925130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d4aa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d56a0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f6122d5d880> <matplotlib.colors.Normalize object at 0x7f6122d5d880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612284cda0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f6122d5d880> <matplotlib.colors.Normalize object at 0x7f6122d5d880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612284cda0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a5460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612270b800>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279eea0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227084d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f609a0d5700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122815250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788dce00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d5ca40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078869820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf2ab0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231b81d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d4a990>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d12ae0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788afaa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122609730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078948c80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d48b30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227566f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea2900>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122817290>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123201ac0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c94380>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf36e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf0aa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f7e30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123200680>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e528a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d4650>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788734d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788de750>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e6f620>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d11f40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788922a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607886a690>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224ebbf0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277e150>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b1790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf0aa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea0bc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bf770>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf0ad0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612314ac60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e6fad0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122879bb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d5c770>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b1250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e8a780>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122869460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfe810>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123200b00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b5280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f7470>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607894a000>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a46b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612262ffe0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d103b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225096d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f608adfe510>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788901a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078891f10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f608adff1d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612250acc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d11e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612260b860>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279d610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e52030>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612262f6e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d73e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d6ae0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d4410>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b4f50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122709d30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224eafc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61228788c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f608ae0b410>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cff1a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf0170>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078892f00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279cad0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf04d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bed80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f79e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b74a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279c170>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf3a70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f4680>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078dfcb60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078925610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078901e80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078890c20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e52990>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279d2e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122658590>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279f0b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d4b470>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612260bbf0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612315bbc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b6450>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e6e030>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123201ac0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607889c110>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61228153d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123158530>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231596d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f5ee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf0dd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279cb00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078eb7e30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224ea600>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279e7b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224ebbf0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123148ad0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279eab0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612273f110>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f4710>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b29c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bfb30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607886a150>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224ebf50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279eb40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078868f80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d4be30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfcb00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078eb4710>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078dfea20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277ffb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788ad220>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c96ff0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607889cd70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122609b50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f5130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d6900>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e6fd40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e11d90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e6ce90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277d010>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612314aea0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612315bad0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e11f10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122814cb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279d520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612262f230>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d5c6e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e51790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227bd760>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f5340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d5c7d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612262c860>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bfc80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bf110>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d10b30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788ae6f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224ebe60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122658ad0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078892cc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612287a660>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cff350>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f6cf0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea3d40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277eae0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788ddf40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f5790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e6c4d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607894b920>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612287b950>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612287bec0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612262e450>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078902cf0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c969c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122524b30>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f607894b9b0> <matplotlib.colors.Normalize object at 0x7f607894b9b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e134a0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f607894b9b0> <matplotlib.colors.Normalize object at 0x7f607894b9b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e134a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e12150>
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> duration
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>duration
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:key 0= tip cell
DEBUG:root:keys 1= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:keys 2= dict_keys(['tip cell', 'stalk cell'])
DEBUG:root:
----- update_motility_params():  cdname= tip cell
DEBUG:root:   (simple) chemotaxis motility is enabled:
DEBUG:root:     setting motility_substrate_dropdown (for cdname= tip cell ) = VEGF
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= tip cell ) = VEGF
DEBUG:root:    chemotactic_sensitivity= {'VEGF': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = tip cell
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = VEGF
DEBUG:root:{'VEGF': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f60788a40b0> <matplotlib.colors.Normalize object at 0x7f60788a40b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078871dc0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f60788a40b0> <matplotlib.colors.Normalize object at 0x7f60788a40b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078871dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078871670>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f61225d45c0> <matplotlib.colors.Normalize object at 0x7f61225d45c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224e9dc0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f61225d45c0> <matplotlib.colors.Normalize object at 0x7f61225d45c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224e9dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224eb020>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f6123201b20> <matplotlib.colors.Normalize object at 0x7f6123201b20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122609eb0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f6123201b20> <matplotlib.colors.Normalize object at 0x7f6123201b20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122609eb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612265ac00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612262fb00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224ebcb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612315a8a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788ae0c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612284e510>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a41d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607886a450>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078892b10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d486b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d4bf50>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f6078949fa0> <matplotlib.colors.Normalize object at 0x7f6078949fa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231bbb90>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f6078949fa0> <matplotlib.colors.Normalize object at 0x7f6078949fa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231bbb90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e120c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e8b2c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb1e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f6f60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227bce60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf2090>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277f680>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607894a7b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122525880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122524b00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607894bdd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231bbad0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e88dd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226581a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c95280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c95dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfde80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279d610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bf770>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122524050>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ec25d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d13380>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078873b00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122869520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612270af30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788adee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788aeb70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb3d70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d4bc50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb0b00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231493a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224e9580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607894b440>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122755910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122817b00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227bcf80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f608ae09580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea0e00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122659250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078891b20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b24e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122878380>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612270a4e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612270bfe0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b0c20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f608ae0be00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607889d430>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612250a3f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277ffb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612253df70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb16d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788aa540>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122508ef0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122658080>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122527b90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612262f410>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f4b90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f5dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788af320>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612253dc70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224e9190>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277c140>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ddb050>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61228693d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a69f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612284d760>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d10c50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c979e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122817f80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122755cd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227571d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612262fad0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078891550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122816930>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122526f90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612262e840>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f6990>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612270bf50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f5d00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612315b1d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231b9df0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e6d280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b7710>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a56a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231bb560>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f53d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277db20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788932f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a8410>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bdcd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788ad010>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122816bd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612273ebd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612253fb90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122868260>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226590d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122658e00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d130e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122878b60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612253cb90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612253d9a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a44a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bd190>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612270a5d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123149580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122754050>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612253cda0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123148920>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078892960>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ec1e80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d48c50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b6630>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d13950>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612253d0a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfd760>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612253e600>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d48dd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf3140>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf3b00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612273cb90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122524c50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f7350>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c970b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d5340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea1730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612253ffb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d12ed0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f6f90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612260a960>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607894a450>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e52db0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d13140>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122509e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612314b320>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf0ce0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b6510>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078925730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227bd310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb15e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e12f90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788acef0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788af710>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607894b200>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612273d790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123200470>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224eaf90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea3890>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b3ce0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122508080>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb3d10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d63c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612262cec0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b6a50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612273c470>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607886bd70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e53fb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e534a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d13770>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279d4f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279e480>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122755c10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f44a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612250af00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123158140>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612315a000>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612315a900>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cff6b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f4350>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231bb4d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bc890>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612260ae10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078de9280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ddb320>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e523c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea2420>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122709d30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227575c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d13cb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279ce60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122878920>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfc980>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d5c470>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224e8050>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b7110>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277f290>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788732f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f609c9416d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e52f90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f4ad0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a6a50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224ea480>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60789497f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e88b30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224e9b50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123158e90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612273e240>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d49490>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231bb620>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227bd910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfc710>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bc2f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f5490>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788730e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e10710>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788aaa50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea2750>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788af7a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122524e00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279c5f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b0d10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788917c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078eb7140>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d5eed0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224e8590>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607886a900>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f609a1077d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a8b00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f608bd67020>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e51f10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d4ae40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612273f590>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612273cb90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f6c90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bd3d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123159370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfd520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612260a6c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612286b320>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfc650>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfc050>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f46b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d4740>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a6930>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f608ae7a4e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612284e300>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788737a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612260adb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612260ba10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f70b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078dff080>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607889cbc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788727e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bea50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225094f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788ae960>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122524950>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612253e1e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d5fa10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279e510>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ec1e80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e12510>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e6cb30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b3650>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfc110>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e10680>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078871340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612253f350>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122757440>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788df350>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612286aea0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e89130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea3410>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612284c350>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227093d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d5e900>
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f6122d5c0b0> <matplotlib.colors.Normalize object at 0x7f6122d5c0b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078927c80>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f6122d5c0b0> <matplotlib.colors.Normalize object at 0x7f6122d5c0b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078927c80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078926690>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f612262c200> <matplotlib.colors.Normalize object at 0x7f612262c200>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612260a7b0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f612262c200> <matplotlib.colors.Normalize object at 0x7f612262c200>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612260a7b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e11fa0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f612286a330> <matplotlib.colors.Normalize object at 0x7f612286a330>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279ecc0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f612286a330> <matplotlib.colors.Normalize object at 0x7f612286a330>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279ecc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e108c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ddb470>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078dfd550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb0110>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d59a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d6e10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d486b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d4b9e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e6ee10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612270b350>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d4a10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279fda0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f6a50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612314a7e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078dfd550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b0350>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf1280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078dd8290>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d12ea0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea0ec0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122608440>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122609fd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612262ea20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122658350>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612273d580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea2150>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f608adff7d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e8adb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788dee10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c949b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d5dc40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b55e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231ba300>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231bb110>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d487d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788be240>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfd4c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f608adff020>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612273cfe0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e884a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078eb6c30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078eb7fb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b5760>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078890b90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612262e600>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612262d190>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb3e30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d4bf20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788aa570>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e52f00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227093d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277f1a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078869d90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078868710>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607889c800>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078893950>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e8bce0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a9190>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122815910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078872090>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078872a50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078901250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d101d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788adbe0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d12510>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612284f5f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122708e90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612250a990>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078925100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ec2450>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e13ad0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f5790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e50d70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122814b30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cffbc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122508a40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231b9220>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277e000>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a45f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607889f140>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122708860>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb2a80>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f612277e090> <matplotlib.colors.Normalize object at 0x7f612277e090>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b4530>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f612277e090> <matplotlib.colors.Normalize object at 0x7f612277e090>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b4530>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788aadb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b5a60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb32c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb0260>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607889c050>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607889ebd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60789029c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227096a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788aec00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122524410>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61228689b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb3230>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231b8e90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227bc170>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a7110>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d5be0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612314b2c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122756540>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122526000>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788df6e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227563f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d115e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607889e5d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f6cc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078902480>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f612279f410> <matplotlib.colors.Normalize object at 0x7f612279f410>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231b9670>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f612279f410> <matplotlib.colors.Normalize object at 0x7f612279f410>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231b9670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b1400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e51a60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60789020f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612260ac60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ec1cd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078927710>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e6e510>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f608ae0bad0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122709670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122868d40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122754050>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078872300>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612270a930>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607894a8a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d49f70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078869010>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a79e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a6390>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607886bbf0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788be750>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607894b7d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a46e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227098b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60789487d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bea20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122708710>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a8d10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788aa720>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f59a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122869a90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d13890>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d13a70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612260a990>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d49a00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfd520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea1e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cff350>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607894bdd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c960c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607894acc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078902c00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122754bc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788accb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612253f410>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612260b650>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d12000>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122754c20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d13710>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123149400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122526690>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225250a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078870350>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d5e090>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bcaa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d49b80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122526ae0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d4bad0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122754650>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279e090>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfc920>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60789266f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607889dfd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612286b1a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224e8380>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61228686b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788ab3e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612265b050>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e6dc10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123201400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f4980>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612253cb30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078903680>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788dfe30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123148650>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612262f7a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788adc40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227beb10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612314a4e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612314a2d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f608b65bce0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227be3c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227bffe0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788de900>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078892180>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607889cad0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078903dd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfc890>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122755b50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e8ab40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612270bfb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607889c830>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078873a70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612315a870>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612262f320>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078872900>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078868650>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ddbec0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d5ea50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078eb49b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a5d90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078903f80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078926540>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123200350>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227558e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf0b30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227bd6a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b4560>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612253c710>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078927500>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60789263f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612284da60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279cb90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f609c942630>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122709730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612260aa20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122609f10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788727b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e6e0c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078872ff0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788de3f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612253c560>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfcda0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224e90a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612270ac90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078debaa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078948ef0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b3920>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e51a30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788dde50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788be000>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612273da30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c95f70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788aa480>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123148ef0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788ace90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612314aa80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf0290>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122757650>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612284dac0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb1fa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb3d70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078902d80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d4a10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e6ec60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf2000>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224e89e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788aca10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f608adff560>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b7c20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612273c680>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612273e8d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279d580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d4bc80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122708f20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226091c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607889c3e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e13080>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078dff050>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfeea0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e8bec0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d5fa10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122817aa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231484a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e6e6f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279f530>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612286a8a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a7c50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d5fec0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612284e5a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d69c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d7290>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b75c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122524410>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225267b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122526240>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788af110>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788ace30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612284d5b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e6c740>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612270a900>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612287ac90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612314b980>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123148d10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b2c90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277f080>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e523f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c942c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c96000>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e8b320>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb2f90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea0740>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612284e180>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122757860>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122525610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607889fda0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122757350>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607889f6b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf1370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078902b40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d5da30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bede0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c96480>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612284d3a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c96360>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227be9f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277f050>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f4b90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788df350>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788ae780>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f4e00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612273c110>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122524d10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227578f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f4cb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b13d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078926fc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122756600>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f608adffe60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122708440>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227bf1d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607889e8d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078eb7290>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122814b00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227bdbb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788acb00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b4bc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607886a660>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e11c40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122815100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e6d580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfe1e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224e8ad0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612273c980>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c94f50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f56d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612287aae0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788716a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a7830>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ec1c40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122526450>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612315b8f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612253cd10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb3920>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123158410>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607cfc2fc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788df440>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d4bd40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078890b90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612270ac90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277e9c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078dfe8a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c96f00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d13140>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612286ac60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078dff320>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122526330>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612287a7b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612273eba0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277e960>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122878ad0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea0680>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea12b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078892ae0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c95d60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b5e50>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f61227f5850> <matplotlib.colors.Normalize object at 0x7f61227f5850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60789254c0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f61227f5850> <matplotlib.colors.Normalize object at 0x7f61227f5850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60789254c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078927950>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f612314a390> <matplotlib.colors.Normalize object at 0x7f612314a390>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122526a50>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f612314a390> <matplotlib.colors.Normalize object at 0x7f612314a390>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122526a50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612286b0b0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f61224b65d0> <matplotlib.colors.Normalize object at 0x7f61224b65d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d12cf0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x7f61224b65d0> <matplotlib.colors.Normalize object at 0x7f61224b65d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d12cf0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a5b50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277db20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277da30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224eaae0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123148d40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bdbe0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078902030>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078903c50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f6990>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60789028a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612265b590>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122756060>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122878b90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078924fb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bf620>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078dfe390>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612265baa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d6ab0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f48f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612273e4b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123159160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078dda510>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078890380>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b6780>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078dfeb10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f608b1c5460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123200b30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612250aea0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078eb7860>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122878bc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227bc050>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d11100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfe5a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b2e40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231b9cd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e51e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f4560>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788df3b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078926e10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b3b00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e8a5a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61232012b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788918e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e6eab0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279fd70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122815790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607889e5d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d4bd40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123159df0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfeff0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a7b60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61228148c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612262e630>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a8470>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ec2150>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e13fe0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612260a690>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226080b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279e240>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122608380>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788710d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279d460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b65d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078891820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bd490>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788dfd10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e6d9d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227be5d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277e090>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e6e450>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612314a7e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122756f30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea3110>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122509730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61228150a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612250bd10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfe600>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b77d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60789010d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788ab2c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfc0b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612253ca40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277f590>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f608adffaa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612265bc80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078dfd460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b4f80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612260a0c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612273c7d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122659070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122757170>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122816510>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078891310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788dc440>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279c350>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b43e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788dc710>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfd6a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226082f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d6d20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d4b30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d6ea0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607889cd10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122524e90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf2ea0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224e8770>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f608b1c4bf0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122754590>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231bac90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078927470>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea2c00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078eb50a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078dfc740>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231ba750>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60989863c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224e8590>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224ea360>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122526540>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607886be90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bd250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122525c10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d5e2d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078927950>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226580b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227bf800>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607894b9e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f4ef0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a7c50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612260baa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f78f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b2930>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788696a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61228682f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f4dd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078eb6fc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d6960>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788ad1f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078868dd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612315aba0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078892de0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d4f50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277e690>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612314b710>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d48800>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607889eb40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078dfc380>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279e510>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612262f740>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612250b1d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e8bc80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122756240>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfe3f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf2450>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b1760>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfe4b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224e96a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227bf6b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f5760>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279c560>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122526090>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612279f380>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d5eed0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122869af0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c95a30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788ad7f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612253e630>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078890fb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612284dbb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612315b200>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078dd93d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788af0e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612270a780>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e6c2f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612270b9b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607894b500>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122658830>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea0260>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d482f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224e9a60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788bddc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224ea7b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122878710>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb2f90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f6ba0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078eb4e90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c94890>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c94290>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfc410>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122755d90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788a8500>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788de690>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224e8590>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078871070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224ea780>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612287a210>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227bed20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b27e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612273e7e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e8a3f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b1790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612286b680>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f608adff560>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d124e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123148740>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b2ea0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d5e6f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c943b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e6cc50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f608ae0b740>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788ad460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227f72c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb1c40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231595b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277e6c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb2ae0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078dff470>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612265a2d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788ab740>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225264e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122526ae0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61227be7b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122868590>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078eb6330>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788af470>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b7b00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612287b9b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f7a10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e6e780>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078902b70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f4920>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612260b530>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078927c50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60789274a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122d48e90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225b2e10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277d340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788ddfd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cfe750>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788ac560>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078890ad0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078926000>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cb2c60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231597c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf2a50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078891bb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f607894b830>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277eb40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612277d3d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61224b6b10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078debb60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ec0260>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61225d6690>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122cf1cd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231b80b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e6f620>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788def90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078e6e960>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f612250b920>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122878fe0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61226f4470>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6078ea2a20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f61231b8c20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6122c96810>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f60788ac410>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x7f6123148f50>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['VEGF']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = VEGF
DEBUG:root:matched! VEGF
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['tip cell', 'stalk cell']
DEBUG:root:
--- key in param_d.keys() = tip cell
DEBUG:root:matched! tip cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '0.0', 'stalk cell': '1.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= tip cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0', 'stalk cell': '0.0', '': '0'}
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for tip cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for tip cell
DEBUG:root:
--- key in param_d.keys() = stalk cell
DEBUG:root:matched! stalk cell
DEBUG:root:--- cell_adhesion_affinity= {'tip cell': '1.0', 'stalk cell': '0.5'}
DEBUG:root:tip cell  --> 1.0
DEBUG:root:stalk cell  --> 0.5
DEBUG:root:

 ====================> fill_xml_motility(): VEGF = VEGF 


DEBUG:root:fill_xml_motility(): {'VEGF': '0.0'}
DEBUG:root:VEGF  --> 0.0
DEBUG:root:self.substrate_list = ['VEGF']
DEBUG:root:substrate = VEGF
DEBUG:root:------------------- fill_xml_interactions():  cdef= stalk cell
DEBUG:root:--- live_phagocytosis_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= tip cell
DEBUG:root:tip cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= stalk cell
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- attack_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:--- fusion_rate= {'tip cell': '0.0', 'stalk cell': '0.0'}
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:tip cell  --> 0.0
DEBUG:root:stalk cell  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for stalk cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for stalk cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
